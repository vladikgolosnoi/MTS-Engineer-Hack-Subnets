Условие задачи:
Ресурсы МТС (включая основной сайт mts.ru) периодически подвергаются DDoS-атакам. Для того, чтобы легитимные пользователи не теряли доступ к сайту во время атак, требуется заранее подготовить «белый список» подсетей IPv4.

Вам выдается исходный список логов с IPv4-адресами, полученный в результате сбора статистики взаимодействия пользователей с веб-сервером в период, когда DDoS-атак не проводилось. Ваша задача — преобразовать его при помощи скрипта агрегации (рекомендуется использовать Python) в список подсетей, не превышающий 64 000 уникальных записей (т.к. уникальных IP-адресов миллионы, а у списка доступа есть соответствующий лимит), где каждая запись — это подсеть с любой маской подсети. В дальнейшем при обнаружении атаки на маршрутизаторе будет активироваться подготовленный вами список, по которому будет допускаться к сайту только трафик от описанных в нем подсетей.

В качестве решения вам необходимо приложить как получившийся список подсетей, так и скрипт, который помог вам его получить.

Требования задачи:
Максимально агрегировать исходные адреса в подсети.
Минимизировать количество «лишних» адресов (то есть покрытых итоговыми подсетями, но отсутствующих в исходном списке).
Не превысить лимит в 64 000 итоговых подсетей.
В расчёт включать только легитимные адреса из исходного списка (не добавлять внешние источники).
Штрафы (метрика качества):
«Потеря» каждого легитимного адреса из исходного списка: +1.00 балл.
Каждый «лишний» адрес в составе итоговых подсетей: +0.05 балла.
Итоговая цель — минимизировать суммарный штраф.
Материалы для решения:
ip_list.txt — список логов, 4 540 700 записей логов (по одной в строке), ~92.8 МБ.
Критерии оценки (автопроверка subnets.txt):
Проверка количества подсетей: лимит ≤ 64 000 строк не превышен.
Подсчёт количества «потерянных» легитимных адресов. Каждый исключённый IP — легитимный клиент, теряющий доступ.
Подсчёт количества «лишних» (нелегитимных) адресов. Каждый такой адрес потенциально может быть источником DDoS-трафика.
Итоговый балл = (число «потерянных») + (число «лишних» × 0.05). 
Чем ниже балл, тем лучше.
Состав решения:
С требованиями к каждой части решения вы можете ознакомиться на соответствующей странице.

subnets.txt — список рассчитанных подсетей в формате CIDR (каждая подсеть на новой строке), например:
20.10.1.0/24
30.20.2.0/28
Отчет (1-3 страницы, PDF) — свободное описание алгоритма и обоснование принятых решений.
GitLab-репозиторий с кодом — в нем необходимо разместить скрипт и инструкцию по запуску.

Каждую составляющую решения необходимо прикрепить в соответствующую вкладку задачи.

Обратите внимание  — в случае отсутствия какой-либо из требуемых частей решения, оно может быть не допущено до проверки.

Требования к работе скрипта:
Скрипт должен воспроизводить тот же результат, что и приложенный subnets.txt.
Время работы — не более 30 минут на системе с характеристиками: 8GB memory, 4 vCPU.
Условия прохода в финал:
В очный финал (Москва) приглашаются топ-10 участников по результатам автопроверки subnets.txt по критериям выше.
Перед допуском жюри проверяет работоспособность скрипта и воспроизводимость результата.
В спорных случаях (одинаковый балл, подозрения в нечестной игре и т. д.) жюри может принять решение о допуске на основе анализа описания и кода алгоритма.